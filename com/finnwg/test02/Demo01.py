# -*- coding: utf-8 -*-
# @Time : 2021/8/8 21:11
# @Author : 17853
# @File : Demo01.py
# @Software: PyCharm

# 创建列表，通过[]来创建
my_list = []  # 创建了一个空列表
# print(my_list, type(my_list))

# 列表存储的数据，我们称之为元素
# 一个列表可以存储多个元素，也可以在创建列表时，来指定列表中的元素
my_list = [10]  # 创建一个只包含一个元素的列表
# print(my_list)

# 当向列表中添加多个元素时，多个元素中间用，隔开
my_list = [10, 20, 30, 40, 50]  # 创建了一个包含又5个元素的列表

# 列表中可以保存任意类型的对象
my_list = [10, 'hello', True, [1, 2, 3], print]

# 列表中的对象都会按照插入的顺序存储到列表中
# 第一个插入的对象保存到第一个位置，第二个保存到第二个位置
# 我们可以通过索引（index）来获取列表中的元素
# 索引时元素在列表中的位置，列表中的每一个元素都有一个索引
# 索引是从0开始的整数，列表的第一个位置索引为0，依次类推
my_list = [10, 20, 30, 40, 50]

# 通过索引获取列表中的元素
# 语法:my_list[索引]  my_list[0]
# print(my_list[5])
# 如果使用的索引超过了最大的范围,会抛出异常
# IndexError: list index out of range


# 获取列表的长度,列表中元素的个数
# len() 函数,通过该函数可以获取列表的长度
# 获取到的长度的值,是列表的最大索引 + 1
# print(len(my_list))  # 5


# 切片
# 切片指从现有列表中,获取一个子列表
# 创建一个列表,一般创建列表时,变量的名字会使用复数

stus = ['孙悟空', '猪八戒', '沙和尚', '唐僧', '蜘蛛精', '白骨精']

# 列表的索引可以时负数
# 如果索引是负数,则是从后向前获取元素,-1表示倒数第一个,-2表示倒数第二个,以此类推
# print(stus[-2])  # 猪八戒


# 通过切片来获取指定的元素
# 语法:列表[起始:结束]
# 通过切片获取元素时,包含起始位置,不包含结束位置,前闭后开
# print(stus[0:2])  # ['孙悟空', '猪八戒']
# 做切片操作时,总会返回一个新的列表,不会影响原来的列表
# 起始和结束位置的索引可以不写
# print(stus[1:])  # ['猪八戒', '沙和尚', '唐僧', '蜘蛛精', '白骨精']
# 省略结束位置,一直截取到最后
# print(stus[:3])  # ['孙悟空', '猪八戒', '沙和尚']
# 省略起始位置,从第一个元素开始截取
# 都不写,截取整个列表,创建一个列表的副本
# print(stus[:])  # ['孙悟空', '猪八戒', '沙和尚', '唐僧', '蜘蛛精', '白骨精']


# 语法:列表[起始:结束:步长]
# 步长表示,每次获取元素的间隔,默认值是1
# print(stus[::2])  # ['孙悟空', '沙和尚', '蜘蛛精']
# 步长不能是0,但可以是负数,如果是负数,则从后向前取
# print(stus[::0])  # ValueError: slice step cannot be zero


# 列表的通用操作
# + 和 *
# + 可以将两个列表拼接为一个列表
my_list = [1, 2, 3] + [4, 5, 6]  # [1, 2, 3, 4, 5, 6]

# * 可以将列表重复指定的次数
# my_list = [1, 2, 3] * 3  # [1, 2, 3, 1, 2, 3, 1, 2, 3]

# in 和 not in
# in 检查指定元素是否存在于列表中
# not in 检查指定元素是否不存在于列表中
stus = ['孙悟空', '猪八戒', '沙和尚', '唐僧', '蜘蛛精', '白骨精', '沙和尚', '沙和尚', '沙和尚']
# print('孙悟空' in stus)  # True
# print('沙和尚' not in stus)  # False


# min() 获取列表中的最小值
# max() 获取列表中的最大值
arr = [1, 20, 5, 30, 34, 3]
# print(min(arr))     # 1
# print(max(arr))     # 34


# 两个方法(method),方法和函数基本上是一样的,只不过方法必须通过对象.方法(0 的形式调用
# xxx.print() 方法实际上就是和对象关系紧密的函数
# s.indes()     获取指定元素在列表中的第一次出现时索引
# print(stus.index('沙和尚'))    # 2
# index()的第二个参数表示查找的起始位置,第三个参数表示查找的结束位置
# print(stus.index('沙和尚', 3, 7))  # 6
# 如果要获取列表中没有的元素,会抛出异常
# print(stus.index('牛魔王'))    # ValueError: '牛魔王' is not in list
# s.count() 统计指定元素出现的次数
# print(stus.count('牛魔王'))    # 0


